#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes for ChunkPool::allocate
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (t:/workspace/open/src/hotspot/share/memory/arena.cpp:81), pid=12196, tid=15000
#
# JRE version: Java(TM) SE Runtime Environment (12.0.2+10) (build 12.0.2+10)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (12.0.2+10, mixed mode, sharing, tiered, compressed oops, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -Dorg.gradle.appname=gradlew org.gradle.wrapper.GradleWrapperMain app:installDebug

Host: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz, 8 cores, 7G,  Windows 10 , 64 bit Build 17763 (10.0.17763.475)
Time: Wed Nov 27 22:29:42 2019 Hora oficial do Brasil elapsed time: 11 seconds (0d 0h 0m 11s)

---------------  T H R E A D  ---------------

Current thread (0x000001c5343fe000):  JavaThread "C1 CompilerThread0" daemon [_thread_in_native, id=15000, stack(0x0000002a42800000,0x0000002a42900000)]


Current CompileTask:
C1:  11544 1439   !   3       java.io.ObjectInputStream::readSerialData (563 bytes)

Stack: [0x0000002a42800000,0x0000002a42900000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x63aa2a]
V  [jvm.dll+0x78ce1e]
V  [jvm.dll+0x78e4c1]
V  [jvm.dll+0x78eb13]
V  [jvm.dll+0x2627e8]
V  [jvm.dll+0xc57f6]
V  [jvm.dll+0xc5b4c]
V  [jvm.dll+0x15139c]
V  [jvm.dll+0x152048]
V  [jvm.dll+0x151a47]
V  [jvm.dll+0x15187e]
V  [jvm.dll+0x131599]
V  [jvm.dll+0x13107d]
V